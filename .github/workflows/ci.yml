---
name: Build And Test

on:
  push:
    branches: ["main"]

env:
  PUBLIC_SIMICS_PKGS_URL_WINDOWS: "https://registrationcenter-download.intel.com/akdlm/IRC_NAS/881ee76a-c24d-41c0-af13-5d89b2a857ff/simics-6-packages-2023-31-win64.ispm"
  PUBLIC_SIMICS_ISPM_URL_WINDOWS: "https://registrationcenter-download.intel.com/akdlm/IRC_NAS/881ee76a-c24d-41c0-af13-5d89b2a857ff/intel-simics-package-manager-1.7.5-win64.exe"
  PUBLIC_SIMICS_PACKAGE_VERSION_1000: "6.0.169"

jobs:
  build_windows:
    name: Build and Test (Windows)
    runs-on: windows-latest
    steps:
      - name: Add ISPM and MinGW to PATH
        run: |
          set PATH $env:PATH
          "C:\MinGW\bin" | Out-File -FilePath $env:GITHUB_PATH
          "C:\ISPM\" | Out-File -FilePath $env:GITHUB_PATH -Append
          "$PATH" | Out-File -FilePath $env:GITHUB_PATH -Append
          echo "Current PATH: " $env:GITHUB_PATH

      - name: Cache SIMICS
        id: cache-simics-packages-windows
        uses: actions/cache@v3
        with:
          path: |
            C:\ISPM\
            C:\SIMICS\
          key: simics-windows-${{ env.PUBLIC_SIMICS_PACKAGE_VERSION_1000 }}

      # ispm-installer.exe is a NSIS installer for the elctron build. We want the
      # default options, so we pass /S to install silently:
      # https://nsis.sourceforge.io/Docs/Chapter3.html#installerusage
      #
      # NOTE: We use | Out-Null on the installer command to make powershell wait for it
      # to actually finish instead of forking it to the background
      - name: Download and Install ISPM
        if: ${{ steps.cache-simics-packages-windows.outputs.cache-hit != 'true' }}
        run: |
          Invoke-WebRequest -URI ${{ env.PUBLIC_SIMICS_ISPM_URL_WINDOWS }} -o C:\ispm-installer.exe
          C:\ispm-installer.exe /S /D='C:\ISPM\' | Out-Null

      - name: Set SIMICS Install Directory
        run: |
          ispm.exe settings install-dir C:\SIMICS\
