---
name: Build And Test

on:
  push:
    branches: ["main", "debug"]
  workflow_dispatch:

env:
  PUBLIC_SIMICS_PKGS_URL_WINDOWS: "https://registrationcenter-download.intel.com/akdlm/IRC_NAS/881ee76a-c24d-41c0-af13-5d89b2a857ff/simics-6-packages-2023-31-win64.ispm"
  PUBLIC_SIMICS_ISPM_URL_WINDOWS: "https://registrationcenter-download.intel.com/akdlm/IRC_NAS/ead79ef5-28b5-48c7-8d1f-3cde7760798f/intel-simics-package-manager-1.8.3-win64.exe"

jobs:
  build_windows_pwsh:
    name: Build and Test (Windows)
    timeout-minutes: 5
    runs-on: windows-latest
    steps:
      - name: Add ISPM and MinGW to PATH
        run: |
          set PATH $env:PATH
          "C:\MinGW\bin" | Out-File -FilePath $env:GITHUB_PATH
          "C:\ISPM\" | Out-File -FilePath $env:GITHUB_PATH -Append
          "C:\procmon\" | Out-File -FilePath $env:GITHUB_PATH -Append
          "$PATH" | Out-File -FilePath $env:GITHUB_PATH -Append
          echo "Current PATH: " $env:GITHUB_PATH

      - name: download procmon
        run: |
          Invoke-WebRequest -URI https://download.sysinternals.com/files/ProcessMonitor.zip -OutFile C:\ProcMon.zip
          Expand-Archive -Path "C:\ProcMon.zip" -DestinationPath "C:\procmon"

      # - name: start procmon capture
      #   run: |
      #     Procmon.exe /AcceptEula /Minimized /Quiet /BackingFile C:\procmon\log.pml
      #     Procmon.exe /AcceptEula /WaitForIdle

      # ispm-installer.exe is a NSIS installer for the elctron build. We want the
      # default options, so we pass /S to install silently:
      # https://nsis.sourceforge.io/Docs/Chapter3.html#installerusage
      #
      # NOTE: We use | Out-Null on the installer command to make powershell wait for it
      # to actually finish instead of forking it to the background
      - name: Download and Install ISPM
        shell: pwsh
        run: |
          echo downloading
          Invoke-WebRequest -URI ${{ env.PUBLIC_SIMICS_ISPM_URL_WINDOWS }} -OutFile C:\ispm-installer.exe
          echo downloaded
          Procmon.exe /AcceptEula /Minimized /Quiet /BackingFile C:\procmon\log.pml
          Procmon.exe /AcceptEula /WaitForIdle
          echo installing
          $processPath = "C:\ispm-installer.exe"
          $arguments = "/S /D=C:\ISPM"
          # from https://stackoverflow.com/questions/36933527/powershell-start-process-wait-with-timeout-kill-and-get-exit-code
          $proc = Start-Process -filePath $processPath -ArgumentList $arguments -PassThru

          # wait up to x seconds for normal termination
          $proc | Wait-Process -Timeout 240 -ErrorAction SilentlyContinue -ErrorVariable timeouted

          if ($timeouted)
          {
              # terminate the process
              $proc | kill

              # update internal error counter
          }
          echo exit code $proc.ExitCode
          echo "done, timed out or failed"
          Procmon.exe /AcceptEula /Terminate
          # from https://learn.microsoft.com/en-us/answers/questions/215348/when-running-using-procmon-terminate-log-is-corrup
          # to help ensure log file is closed properly
          Procmon.exe /AcceptEula /PagingFile /NoConnect /Minimized /Quiet
          Procmon.exe /AcceptEula /WaitForIdle
          Procmon.exe /AcceptEula /Terminate


      - name: Set SIMICS Install Directory
        run: |
          ispm.exe settings install-dir C:\SIMICS\

      # - name: kill procmon
      #   if: ${{ always() }}
      #   run: |
      #     Procmon.exe /AcceptEula /Terminate
      #     # from https://learn.microsoft.com/en-us/answers/questions/215348/when-running-using-procmon-terminate-log-is-corrup
      #     # to help ensure log file is closed properly
      #     Procmon.exe /AcceptEula /PagingFile /NoConnect /Minimized /Quiet
      #     Procmon.exe /AcceptEula /WaitForIdle
      #     Procmon.exe /AcceptEula /Terminate
      #     sleep 60

      - name: save procmon log
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: procmon-log
          path: C:\procmon\log.pml

  # build_windows_powershell:
  #   name: Build and Test (Windows)
  #   runs-on: windows-latest
  #   timeout-minutes: 5
  #   steps:
  #     - name: Add ISPM and MinGW to PATH
  #       run: |
  #         set PATH $env:PATH
  #         "C:\MinGW\bin" | Out-File -FilePath $env:GITHUB_PATH
  #         "C:\ISPM\" | Out-File -FilePath $env:GITHUB_PATH -Append
  #         "$PATH" | Out-File -FilePath $env:GITHUB_PATH -Append
  #         echo "Current PATH: " $env:GITHUB_PATH

  #     # ispm-installer.exe is a NSIS installer for the elctron build. We want the
  #     # default options, so we pass /S to install silently:
  #     # https://nsis.sourceforge.io/Docs/Chapter3.html#installerusage
  #     #
  #     # NOTE: We use | Out-Null on the installer command to make powershell wait for it
  #     # to actually finish instead of forking it to the background
  #     - name: Download and Install ISPM
  #       shell: powershell
  #       run: |
  #         echo downloading
  #         Invoke-WebRequest -URI ${{ env.PUBLIC_SIMICS_ISPM_URL_WINDOWS }} -OutFile C:\ispm-installer.exe
  #         echo downloaded
  #         echo installing
  #         C:\ispm-installer.exe /S /D='C:\ISPM\' | Out-Null
  #         echo done

  #     - name: Set SIMICS Install Directory
  #       run: |
  #         ispm.exe settings install-dir C:\SIMICS\

  #     - name: Set SIMICS Install Directory
  #       run: |
  #         ispm.exe settings install-dir C:\SIMICS\
